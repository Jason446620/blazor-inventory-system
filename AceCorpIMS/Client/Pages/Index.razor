@page "/"
@using AceCorpIMS.Client.Models;

@inject NavigationManager NavigationManager

<PageTitle>Ace Corp Inventory Management System</PageTitle>

<h1>Office Equipment Inventory</h1>
<br />

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateNewItem">Add Inventory</button>
    </div>

</div>

@if (inventories is null)
{
    <p><em>Loading...</em></p>
}
else {

         <DeleteInventory Inventory="@currentInventory" OnClose="@OnDeleteModalClose">
         </DeleteInventory>  

        <table class="table table-striped table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Inventory Id</th>
                    <th>Inventory Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Date Received</th>
                    <th></th>
                </tr>

            </thead>
            <tbody>
                @foreach (var inv in inventories)
                {
                    <tr>
                        <td>@inv.InventoryId</td>
                        <td>@inv.InventoryName</td>
                        <td>@inv.Quantity</td>
                        <td>@inv.Price</td>
                        <td>@inv.DateReceived.ToString("MM/dd/yyyy")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditInventory(inv.InventoryId))">
                        <i class="oi oi-pencil"></i>
                        </button>
                        <button class="btn btn-danger" 
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                @onclick="(() => currentInventory = inv)">
                            <i class="oi oi-x"></i>
                        </button>
                    </td>
                    </tr>
                }
            </tbody>
        </table>
}



@code {
    private Inventory[]? inventories;

    private Inventory? currentInventory;

    protected override void OnInitialized()
    {
        inventories = InventoryClient.GetInventories();
    }

    private void CreateNewItem()
    {
        NavigationManager.NavigateTo("/inventory");
    }

    private void EditInventory(int InventoryId)
    {
        NavigationManager.NavigateTo($"/inventory/{InventoryId}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            InventoryClient.DeleteInventory(currentInventory!.InventoryId);
            inventories = InventoryClient.GetInventories();
        }
    }
}



